version: '3'

services:

  app:
    build: .
    container_name: app
#    entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/app/entrypoint.sh
    environment:
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=root
    volumes:
    - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis

  nginx:
    build: .docker/nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
    - "8000:80"
    volumes:
    - .:/var/www
    - ./.docker/nginx/templates:/etc/nginx/templates
    environment:
      - PASS_HOST=app
      - PASS_PORT=9000
    networks:
      - app-network
    depends_on:
      - app

  db:
    build: .docker/mysql
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
    - "3306:3306"
    volumes:
    - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", 'mysql -uroot --database=laravel --password=root --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
      interval: 2s
      timeout: 2s
      retries: 30

  redis:
    image: library/redis:alpine
    expose:
      - 6379
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
